<?php 
/*
 * An input filter which expands the [qvideo] tag into appropriate code for embedding HTML5 video with a flash player fallback.
 * Copyright (c) J.Q.Stafford-Fraser 2010
 * Released under the GNU General Public License as explained in LICENSE.txt.
 */

/*
 * Implementation of hook_help().
 */

function qvideo_help($path, $arg) {
  switch ($path) {
    case 'admin/help#qvideo':
        $output = '<p>'. 
          t("This filter allows you to insert video clips into a page, as HTML5 with fallback to Flash.").
          t("Here is an example: [qvideo 640 480 video.jpg video.mp4 video.ogv video.flv].</p>");
    return $output;
  }
}

function qvideo_filter_tips($delta, $format, $long=FALSE) {
    if ($long) {
        return t("The Qvideo filter allows you to insert video clips into a page using standard HTML5 tags, with fallback to a Flash player.<br/><br/>
          Under 'Site Configuration', create an input format which includes the Qvideo macro, or add it to one of your existing ones.<br/><br/>
          
          To insert a video, upload a couple of versions, e.g. as file attachments to a node - it's worth having .mp4 and .ogv formats at least, 
          a 'poster' image to be displayed before the movie loads, and a version playable by a Flash player - typically a .flv file.<br/><br/>

          Then make sure you've selected the appropriate input format for your body text and put, for example:<br/><br/>
          
          [qvideo 640 480 /files/videoposter.jpg /files/video.mp4 /files/video.ogv /files/video.flv]<br/><br/>
          
          At present the module works with the JW PLayer from http://www.longtailvideo.com, or Flowplayer from http://flowplayer.org.  
          You can specify, in the configuration of the input format, where this can be found on your site.
          ");
    } else {
        return t('Use the [qvideo] tag to put HTML5 video into your content with a Flash player fallback.');
    }
}

function qvideo_filter($op, $delta = 0, $format = -1, $text = ''){
    switch($op){
        case 'list':
            return array(
                0 => t('Qvideo HTML5 video macro')
                );     
        case 'description':
            return t('Enables users to add HTML5-compatible video with Flash fallback by typing<br /> [qvideo width height posterurl videourl1 videourl2... flashvideourl].');
        case 'settings':
            return _qvideo_settings();
            break;
        case 'no cache':
            // It's OK to cache this filter's output
            return FALSE;
        case 'prepare':
            // No preparation yet
            return $text;
        case 'process':
            return preg_replace_callback("|\[qvideo\s*(\d+)\s*(\d+)\s*(\S+)\s+(.*)\]|i",
                'qvideo_expand', $text);
        default:
            return $text;
    }
}

function _video_mimetype($path) {
    // There must be a better way...
    // Return MIME type based on extension of $path
    $mimetypes = array(
        "mpeg"=>   "video/mpeg",
        "mpg" =>   "video/mpeg",
        "mov" =>   "video/quicktime",
        "mp4" =>   "video/mp4",
        "qt"  =>   "video/quicktime",
        "ogv" =>   "video/ogg",
        "flv" =>   "video/x-flv",
        "m4v" =>   "video/x-m4v",
	"webm" =>  "video/webm"
        );
    $ext = pathinfo($path, PATHINFO_EXTENSION);
    $mtype = "";
    if (array_key_exists($ext, $mimetypes)) {
        $mtype = $mimetypes[$ext];
    } 
    return $mtype;
}

function _qvideo_settings() {
  $form['filter_qvideo'] = array(
    '#type' => 'fieldset',
    '#title' => t('Qvideo filter'),
    '#collapsible' => TRUE,
  );
  $form['filter_qvideo']["qvideo_flash_player_location"] = array(
    '#type' => 'textfield',
    '#title' => t('Location of the core JW Player or Flowplayer'),
    '#default_value' => variable_get("qvideo_flash_player_location", '/files/flvplayer.swf'),
    '#size' => 64,
    '#maxlength' => 1024,
    '#description' => t(
        'JW Player can be downloaded from http://www.longtailvideo.com, and the core of it is a single file called flvplayer.swf.
        Flowplayer can be found at http://flowplayer.org, and the core file is called something like flowplayer-3.2.2.swf.
        Where can one of these be found on your site?'),
  );

  $form['filter_qvideo']["qvideo_offer_downloads"] = array(
    '#type' => 'checkbox',
    '#description' => t("An alternative is to use the 'list' option on file attachments"),
    '#title' => t('Provide download links for non-Flash videos'),
    '#default_value' => variable_get("qvideo_offer_downloads", 1),
  );
  return $form;
}

function qvideo_expand($matches) {
    if (count($matches) < 5) {
        return "<b>Invalid syntax for qvideo tag</b>";
    }
    $width = $matches[1];
    $height = $matches[2];
    $poster = $matches[3];
    $files = split(" ", $matches[4]);
    $numfiles = count($files);
    if ($numfiles < 2) {
        return "<b>Need to specify at least one video plus one flash file for qvideo tag</b>";
    }
    $htmlfiles = array_slice($files, 0, -1);
    $flashfile = $files[$numfiles-1];
    $flashplayer = variable_get("qvideo_flash_player_location", '/files/flvplayer.swf');
    
    $isiPad = (bool) strpos($_SERVER['HTTP_USER_AGENT'],'iPad');
    
    $result = "<video width=\"$width\" height=\"$height\" controls preload=\"none\" ";
    // Early iPad OS has a bug if poster is included
    if (! $isiPad) $result .= "poster=\"$poster\"";
    $result .= '>';
    foreach ($htmlfiles as $vfile) {
        
        $result .= "<source src=\"" . $vfile . "\"  type=\"" . _video_mimetype($vfile) . "\" />\n";
    };
    // Flashvars to make flowplayer work too
    $fpflashvars = '&config={\'clip\':{\'url\':\''. $flashfile .'\', \'autoPlay\':false, \'autoBuffering\': true}}';
    
    $result .= '
     <!-- fallback to Flash: -->
     <embed width="' . $width . '" height="' . (string)($height + 24) . '"
      src="' . $flashplayer . '"
      flashvars="image=' . $poster . '&file='. $flashfile . $fpflashvars .'" 
      allowfullscreen="true"
      />
    </video>
    ';
    print variable_get("qvideo_offer_downloads", 1);
    if ((bool) variable_get("qvideo_offer_downloads", 1)) {
        $result .='
            <p>  <strong>Download Video:</strong>
            <ul>
        ';
        foreach ($htmlfiles as $vfile) {
            $result .= '<li><a href="' . $vfile . '">' . _video_mimetype($vfile) . "</a></li>\n";
        };

        $result .="</ul>\n";
    }
    return $result;
}
